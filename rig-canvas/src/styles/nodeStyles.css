/* Node resizer customizations - enhanced version */
.node-resizer-line {
  border-width: 2px !important;
  transition: all var(--transition-fast) !important;
  z-index: var(--z-above) !important;
  opacity: 0.8 !important;
  border-color: var(--node-selected) !important;
}

.node-resizer-handle {
  width: 10px !important;
  height: 10px !important;
  transition: transform var(--transition-fast), background-color var(--transition-fast) !important;
  box-shadow: var(--shadow-sm) !important;
  z-index: var(--z-above) !important; /* Make sure handles are above lines */
  pointer-events: all !important; /* Ensure handles capture mouse events */
  background-color: var(--handle-color) !important;
  border: 2px solid var(--foreground-primary) !important;
  border-radius: var(--radius-full) !important;
}

/* XY Flow specific resizer styling */
.xy-flow__resize-control {
  z-index: var(--z-above) !important;
  pointer-events: all !important;
}

.node-resizer-handle:hover {
  transform: scale(1.2) !important;
  background-color: var(--primary-hover) !important;
}

/* Custom cursor styles for each resize direction */
.node-resizer-handle[data-position="top"] {
  cursor: n-resize !important;
}
.node-resizer-handle[data-position="top-right"] {
  cursor: ne-resize !important;
}
.node-resizer-handle[data-position="right"] {
  cursor: e-resize !important;
}
.node-resizer-handle[data-position="bottom-right"] {
  cursor: se-resize !important;
}
.node-resizer-handle[data-position="bottom"] {
  cursor: s-resize !important;
}
.node-resizer-handle[data-position="bottom-left"] {
  cursor: sw-resize !important;
}
.node-resizer-handle[data-position="left"] {
  cursor: w-resize !important;
}
.node-resizer-handle[data-position="top-left"] {
  cursor: nw-resize !important;
}

/* Note node styling */
.note-node {
  background-color: var(--node-bg);
  border: 1px solid var(--node-border);
  border-radius: var(--radius-md);
  transition: box-shadow var(--transition-normal), border-color var(--transition-normal);
  box-shadow: var(--shadow-md);
  overflow: hidden;
}

.note-node.selected {
  border-color: var(--node-selected);
  box-shadow: var(--shadow-lg);
}

.note-node-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--spacing-2) var(--spacing-3);
  background-color: var(--background-tertiary);
  border-bottom: 1px solid var(--node-border);
}

.note-node-title {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--foreground-primary);
  margin: 0;
}

.note-node-controls {
  display: flex;
  gap: var(--spacing-1);
}

.note-node-controls button {
  background: transparent;
  border: none;
  padding: var(--spacing-1);
  border-radius: var(--radius-sm);
  color: var(--foreground-secondary);
  cursor: pointer;
  transition: color var(--transition-fast), background-color var(--transition-fast);
}

.note-node-controls button:hover {
  color: var(--foreground-primary);
  background-color: rgba(0, 0, 0, 0.1);
}

.note-node-content {
  padding: var(--spacing-2);
}

.note-textarea {
  width: 100%;
  min-height: 100px;
  background-color: transparent;
  border: none;
  color: var(--foreground-primary);
  font-family: var(--font-sans);
  font-size: var(--font-size-sm);
  resize: none;
  outline: none;
  padding: var(--spacing-1);
  line-height: var(--line-height-base);
}

/* Improved content styling */
.note-content {
  overflow: auto;
  word-wrap: break-word;
  will-change: width, height, transform;
  backface-visibility: hidden;
  transform: translateZ(0);
  /* No transition during resizing to prevent lag */
  box-sizing: border-box !important; 
  /* Ensure content doesn't overflow and interfere with resizer */
  position: relative;
  /* Create a new stacking context to avoid z-index conflicts */
  isolation: isolate;
}

/* Fix the ReactFlow node default behavior */
.react-flow__node {
  box-sizing: border-box !important;
  max-width: none !important; /* Remove any max-width restrictions */
  position: relative;
  transition: box-shadow var(--transition-fast);
}

.react-flow__node.selected {
  box-shadow: var(--shadow-lg);
}

/* Improve resizer visibility and interaction */
.react-flow__resize-control {
  z-index: var(--z-normal);
  border-radius: var(--radius-full);
}

.react-flow__resize-control.handle {
  width: 8px !important;
  height: 8px !important;
  background-color: var(--handle-color) !important;
  border: 2px solid var(--foreground-primary) !important;
  box-shadow: var(--shadow-sm);
}

/* Ensure resizing handles are always visible when node is selected */
.react-flow__node.selected .react-flow__resize-control {
  opacity: 1;
}

/* Make resize controls more visible on hover */
.react-flow__resize-control:hover {
  transform: scale(1.2);
  cursor: pointer;
}

/* Additional sizing properties */
.react-flow__node {
  max-height: none !important; /* Remove any max-height restrictions */
}

/* Ensure that ReactFlow data-driven attributes work correctly */
[data-resizing="true"] {
  transition: none !important; /* Disable transitions during active resize */
}

/* Size menu styling */
.note-size-menu {
  position: absolute;
  right: -120px;
  top: 0;
  background-color: var(--background-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-lg);
  z-index: var(--z-modal);
  width: 180px;
  overflow: hidden;
}

.note-size-menu-header {
  padding: var(--spacing-2) var(--spacing-3);
  background-color: var(--background-tertiary);
  border-bottom: 1px solid var(--border-primary);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
}

.note-size-menu-options {
  display: flex;
  flex-direction: column;
}

.note-size-menu-option {
  padding: var(--spacing-2) var(--spacing-3);
  text-align: left;
  border: none;
  background: transparent;
  cursor: pointer;
  font-size: var(--font-size-xs);
  color: var(--foreground-primary);
  transition: background-color var(--transition-fast);
}

.note-size-menu-option:hover {
  background-color: var(--background-tertiary);
}

/* Smooth markdown rendering */
.prose {
  transition: all var(--transition-fast);
  will-change: transform;
}

/* Make toolbar move smoothly with resize */
.note-toolbar {
  transition: all var(--transition-fast);
}
